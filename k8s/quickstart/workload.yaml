apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: ns1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: echo-service-account-ns1
  namespace: ns1
  labels:
    account: echoserver-app-ns1
---
apiVersion: v1
kind: Service
metadata:
  name: echoserver-service-ns1
  namespace: ns1
spec:
  type: NodePort
  selector:
    app: echoserver-app-ns1
  ports:
    - port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver-depl-ns1
  namespace: ns1
  labels:
    app: echoserver-app-ns1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echoserver-app-ns1
  template:
    metadata:
      labels:
        app: echoserver-app-ns1
        spiffe.io/spire-managed-identity: "true"
      annotations:
          inject.istio.io/templates: "sidecar,spire"
    spec:
      serviceAccountName: echo-service-account-ns1
      containers:
        - name: echoserver-app-ns1
          image: imeshai/echoserver
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sleep-service-account-ns1
  namespace: ns1
  labels:
    account: sleep-ns1
---
apiVersion: v1
kind: Service
metadata:
  name: sleep-service-ns1
  namespace: ns1
  labels:
    app: sleep-app-ns1
    service: sleep-ns1
spec:
  ports:
  - port: 80
    name: http
  selector:
    app: sleep-app-ns1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sleep-depl-ns1
  namespace: ns1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sleep-app-ns1
  template:
    metadata:
      labels:
        app: sleep-app-ns1
        spiffe.io/spire-managed-identity: "true"
      annotations:
          inject.istio.io/templates: "sidecar,spire"
    spec:
      serviceAccountName: sleep-service-account-ns1
      containers:
      - name: sleep
        image: curlimages/curl
        command: ["/bin/sleep", "infinity"]
        imagePullPolicy: IfNotPresent
---
